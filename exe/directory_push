#!/usr/bin/env ruby

require 'optparse'
require 'directory_push'
include DirectoryPush

options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: #{__FILE__} [options]"

  opts.on_tail("-h", "--help", "Show this message") do
    puts opts
    exit
  end

  options[:directory_path] = nil
  opts.on(
    "-d",
    "--directory-path [PROJECT PATH]",
    "Path to the directory to push."
  ) do |d|
    options[:directory_path] = d
  end

  options[:pull] = false
  opts.on(
    "-l",
    "--[no-]pull",
    "Pull changes before pushing. Defaults to #{options[:pull]}"
  ) do |d|
    options[:pull] = d
  end

  options[:path_on_remote] = nil
  opts.on("-n", "--path-on-remote [PATH]", "Path to the pushed directory on the remote server.") do |d|
    options[:path_on_remote] = d
  end

  options[:remote_address] = nil
  opts.on("-r", "--remote-address [ADDRESS]", "Address to the remote server.") do |d|
    options[:remote_address] = d
  end

  options[:user] = Cli::DEFAULT_USER
  opts.on(
    "-u",
    "--user [USER]",
    %W{The user name to use to login to the remote server. Defaults to "#{options[:user]}".}
  ) do |d|
    options[:user] = d
  end

  options[:rsync_options] = Cli::DEFAULT_RSYNC_OPTIONS
  opts.on(
    "-o",
    "--rsync-options OPTS",
    Array,
    %Q{rsync options. Defaults to #{options[:rsync_options]}.}
  ) { |a| options[:rsync_options] = a.map { |e| e.to_s  } }

  options[:ignore_pattern] = nil
  opts.on(
    "-i",
    "--ignore-pattern [PATTERN]",
    %W{Pattern describing files that gaurd should ignore during its watch.}
  ) do |d|
    options[:ignore_pattern] = d
  end

  options[:preserve_settings] = true
  opts.on(
    "-s",
    "--[no-]preserve_settings",
    %W{Preserve the configuration settings and a backup of the remote directory before pushing after exiting. Defaults to #{options[:preserve_settings]}.}
  ) do |d|
    options[:preserve_settings] = d
  end
end.parse!

Cli.new(
  options[:directory_path],
  options[:remote_address],
  user: options[:user],
  path_on_remote: options[:path_on_remote],
  pull: options[:pull],
  rsync_options: options[:rsync_options],
  guard_ignore_pattern: options[:ignore_pattern],
  preserve_settings: options[:preserve_settings]
).watch
